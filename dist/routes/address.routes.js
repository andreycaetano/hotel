"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addressRoutes = void 0;
const express_1 = require("express");
const tsyringe_1 = require("tsyringe");
const address_controller_1 = require("../controller/address.controller");
const validates_middlewares_1 = require("../middleware/validates.middlewares");
const address_schema_1 = require("../schemas/address.schema");
exports.addressRoutes = (0, express_1.Router)();
const controller = tsyringe_1.container.resolve(address_controller_1.AddressController);
const validate = tsyringe_1.container.resolve(validates_middlewares_1.Validates);
exports.addressRoutes.post("/country/create", (req, res, next) => validate.validateToken(req, res, next), (req, res, next) => validate.validateAdminRole(req, res, next), validate.validateBody({ body: address_schema_1.countrySchema }), (req, res) => controller.createCountry(req, res));
exports.addressRoutes.patch("/country/:id", (req, res, next) => validate.validateToken(req, res, next), (req, res, next) => validate.validateAdminRole(req, res, next), validate.validateBody({ body: address_schema_1.countrySchema }), (req, res) => controller.updateCountry(req, res));
exports.addressRoutes.get("/country/", (req, res) => controller.getCountry(req, res));
exports.addressRoutes.delete("/country/:id", (req, res, next) => validate.validateToken(req, res, next), (req, res, next) => validate.validateAdminRole(req, res, next), (req, res) => controller.deleteCountry(req, res));
exports.addressRoutes.post("/cities/create", (req, res, next) => validate.validateToken(req, res, next), (req, res, next) => validate.validateAdminRole(req, res, next), validate.validateBody({ body: address_schema_1.stateSchema }), (req, res) => controller.createCity(req, res));
exports.addressRoutes.patch("/cities/:id", (req, res, next) => validate.validateToken(req, res, next), (req, res, next) => validate.validateAdminRole(req, res, next), validate.validateBody({ body: address_schema_1.stateSchema }), (req, res) => controller.updateCity(req, res));
exports.addressRoutes.delete("/cities/:id", (req, res, next) => validate.validateToken(req, res, next), (req, res, next) => validate.validateAdminRole(req, res, next), (req, res) => controller.deleteCity(req, res));
exports.addressRoutes.get("/cities", (req, res) => controller.getCities(req, res));
